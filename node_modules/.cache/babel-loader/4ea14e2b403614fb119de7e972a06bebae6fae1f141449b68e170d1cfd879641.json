{"ast":null,"code":"var _jsxFileName = \"/Users/akulayagna/Desktop/livetranspction/src/LiveTranscript.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveTranscript = () => {\n  _s();\n  const [status, setStatus] = useState('Connecting…');\n  const outRef = useRef(null);\n  const lastPartialIndexRef = useRef(null);\n  useEffect(() => {\n    const pathParts = window.location.pathname.split('/');\n    const sessionId = pathParts[pathParts.length - 1];\n    const ws_url = \"wss://7oryr6x2l9.execute-api.us-east-2.amazonaws.com/dev/\";\n    const socket = new WebSocket(ws_url);\n    socket.onopen = () => {\n      console.log(\"✅ WebSocket connected\");\n      setStatus(\"Live\");\n      socket.send(JSON.stringify({\n        action: \"join\",\n        session_id: sessionId\n      }));\n    };\n    socket.onmessage = event => {\n      console.log(\"📥 Message received:\", event.data);\n      try {\n        const data = JSON.parse(event.data);\n        const outEl = outRef.current;\n        if (!outEl) return;\n        if (data.action === 'segment') {\n          const {\n            text,\n            is_partial\n          } = data;\n          if (!text || !text.trim()) return;\n          if (is_partial) {\n            if (lastPartialIndexRef.current === null) {\n              outEl.textContent += text + '\\n';\n              lastPartialIndexRef.current = outEl.textContent.split('\\n').length - 2;\n            } else {\n              const lines = outEl.textContent.split('\\n');\n              lines[lastPartialIndexRef.current] = text;\n              outEl.textContent = lines.join('\\n');\n            }\n          } else {\n            if (lastPartialIndexRef.current !== null) {\n              const lines = outEl.textContent.split('\\n');\n              lines[lastPartialIndexRef.current] = text;\n              outEl.textContent = lines.join('\\n');\n              lastPartialIndexRef.current = null;\n            } else {\n              outEl.textContent += text + '\\n\\n';\n            }\n          }\n          outEl.scrollTop = outEl.scrollHeight;\n        }\n        if (data.action === 'join_ok') {\n          console.log(\"👍 Successfully joined session\");\n        }\n      } catch (err) {\n        console.error(\"❌ Error parsing WebSocket message:\", err, event.data);\n      }\n    };\n    socket.onerror = err => {\n      console.error(\"❌ WebSocket error:\", err);\n      setStatus(\"Error connecting\");\n    };\n    socket.onclose = () => {\n      console.warn(\"⚠️ WebSocket closed\");\n      setStatus(\"Disconnected\");\n    };\n    return () => {\n      console.log(\"🔌 Closing WebSocket\");\n      socket.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      maxWidth: '900px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      style: {\n        marginBottom: '10px',\n        color: '#666'\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      ref: outRef,\n      style: {\n        whiteSpace: 'pre-wrap',\n        fontSize: '1.05em',\n        maxHeight: '70vh',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        padding: '15px',\n        borderRadius: '6px',\n        backgroundColor: '#f8f9fa'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveTranscript, \"9X99wEiNx4gMp3Q2+Z/2KN7/jww=\");\n_c = LiveTranscript;\nexport default LiveTranscript;\nvar _c;\n$RefreshReg$(_c, \"LiveTranscript\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","LiveTranscript","_s","status","setStatus","outRef","lastPartialIndexRef","pathParts","window","location","pathname","split","sessionId","length","ws_url","socket","WebSocket","onopen","console","log","send","JSON","stringify","action","session_id","onmessage","event","data","parse","outEl","current","text","is_partial","trim","textContent","lines","join","scrollTop","scrollHeight","err","error","onerror","onclose","warn","close","style","fontFamily","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","id","marginBottom","color","ref","whiteSpace","fontSize","maxHeight","overflowY","border","borderRadius","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/akulayagna/Desktop/livetranspction/src/LiveTranscript.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst LiveTranscript = () => {\n  const [status, setStatus] = useState('Connecting…');\n  const outRef = useRef(null);\n  const lastPartialIndexRef = useRef(null);\n\n  useEffect(() => {\n    const pathParts = window.location.pathname.split('/');\n    const sessionId = pathParts[pathParts.length - 1];\n\n    const ws_url = \"wss://7oryr6x2l9.execute-api.us-east-2.amazonaws.com/dev/\";\n    const socket = new WebSocket(ws_url);\n\n    socket.onopen = () => {\n      console.log(\"✅ WebSocket connected\");\n      setStatus(\"Live\");\n\n      socket.send(JSON.stringify({\n        action: \"join\",\n        session_id: sessionId\n      }));\n    };\n\n    socket.onmessage = (event) => {\n      console.log(\"📥 Message received:\", event.data);\n\n      try {\n        const data = JSON.parse(event.data);\n        const outEl = outRef.current;\n\n        if (!outEl) return;\n\n        if (data.action === 'segment') {\n          const { text, is_partial } = data;\n          if (!text || !text.trim()) return;\n\n          if (is_partial) {\n            if (lastPartialIndexRef.current === null) {\n              outEl.textContent += text + '\\n';\n              lastPartialIndexRef.current = outEl.textContent.split('\\n').length - 2;\n            } else {\n              const lines = outEl.textContent.split('\\n');\n              lines[lastPartialIndexRef.current] = text;\n              outEl.textContent = lines.join('\\n');\n            }\n          } else {\n            if (lastPartialIndexRef.current !== null) {\n              const lines = outEl.textContent.split('\\n');\n              lines[lastPartialIndexRef.current] = text;\n              outEl.textContent = lines.join('\\n');\n              lastPartialIndexRef.current = null;\n            } else {\n              outEl.textContent += text + '\\n\\n';\n            }\n          }\n\n          outEl.scrollTop = outEl.scrollHeight;\n        }\n\n        if (data.action === 'join_ok') {\n          console.log(\"👍 Successfully joined session\");\n        }\n\n      } catch (err) {\n        console.error(\"❌ Error parsing WebSocket message:\", err, event.data);\n      }\n    };\n\n    socket.onerror = (err) => {\n      console.error(\"❌ WebSocket error:\", err);\n      setStatus(\"Error connecting\");\n    };\n\n    socket.onclose = () => {\n      console.warn(\"⚠️ WebSocket closed\");\n      setStatus(\"Disconnected\");\n    };\n\n    return () => {\n      console.log(\"🔌 Closing WebSocket\");\n      socket.close();\n    };\n  }, []);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', maxWidth: '900px', margin: '0 auto', padding: '20px'}}>\n      <h2>Live Transcript</h2>\n      <div id=\"status\" style={{ marginBottom: '10px', color: '#666' }}>{status}</div>\n\n      <pre\n        ref={outRef}\n        style={{whiteSpace: 'pre-wrap', fontSize: '1.05em', maxHeight: '70vh', overflowY: 'auto',\n          border: '1px solid #ccc', padding: '15px', borderRadius: '6px', backgroundColor: '#f8f9fa'}}\n      />\n    </div>\n  );\n};\n\nexport default LiveTranscript;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}